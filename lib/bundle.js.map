{"version":3,"sources":["webpack:///webpack/bootstrap c721b5e561853eec5290","webpack:///./lib/enclose.js","webpack:///./lib/game.js","webpack:///./lib/marble.js","webpack:///./lib/util.js","webpack:///./lib/moving_object.js","webpack:///./lib/ship.js","webpack:///./lib/game_view.js"],"names":["Game","require","GameView","document","addEventListener","canvasEl","getElementsByTagName","width","DIM_X","height","DIM_Y","ctx","getContext","game","start","Marble","Ship","Util","marbles","ships","filledPositions","Set","shapesArray","seenPositions","addMarbles","addFilledPositions","x_limit","y_limit","found","i","top","bottom","add","left","right","object","push","NUM_MARBLES","ship","pos","concat","allObjects","length","j","obj1","obj2","isCollidedWith","collision","collideWith","currentArray","beginPath","moveTo","lineTo","closePath","fillStyle","fill","root","target","seen","toString","foundArray","up","down","validArrays","has","returnLeft","dfs","Object","assign","unshift","returnRight","returnUp","returnDown","returnArray","forEach","array","startX","startY","endX","endY","strokeStyle","stroke","shapeArray","cur_pos","end","fillArray","arr","clearRect","BG_COLOR","fillRect","drawSeen","drawShapes","draw","imageData","getImageData","data","black","white","count","percent","delta","move","Math","random","asteroids","splice","marble","indexOf","moveObjects","checkCollisions","wrap","FPS","module","exports","MovingObject","DEFAULTS","COLOR","RADIUS","SPEED","options","color","randomPosition","radius","vel","randomVec","otherObject","relocate","dir","vec","norm","scale","dist","pos1","pos2","sqrt","pow","deg","PI","sin","cos","m","coord","max","isWrappable","arc","centerDist","timeDelta","velocityScale","NORMAL_FRAME_TIME_DELTA","offsetX","offsetY","prev_pos","hitWall","remove","randomColor","hexDigits","floor","started","impulse","current_pos","next_pos","addShip","keys","MOVES","k","key","power","fireBullet","bindKeyHandlers","lastTime","requestAnimationFrame","animate","bind","time","step"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c721b5e561853eec5290","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/enclose.js","const Marble = require(\"./marble\");\nconst Ship = require(\"./ship\");\nconst Util = require(\"./util\");\n\nclass Game {\n  constructor() {\n    this.marbles = [];\n    this.ships = [];\n    this.filledPositions = new Set();\n    this.shapesArray = [];\n    this.seenPositions = [];\n    this.addMarbles();\n    this.addFilledPositions();\n    this.x_limit = Game.DIM_X;\n    this.y_limit = Game.DIM_Y;\n    this.found = false;\n  }\n\n  addFilledPositions() {\n    for(let i = 0; i <= Game.DIM_Y; i += 10){\n      const top = `0,${i}`;\n      const bottom = `${Game.DIM_X},${i}`;\n      this.filledPositions.add(top);\n      this.filledPositions.add(bottom);\n    }\n    for(let i = 0; i <= Game.DIM_X; i += 10){\n      const left = `${i},0`;\n      const right = `${i},${Game.DIM_Y}`;\n      this.filledPositions.add(left);\n      this.filledPositions.add(right);\n    }\n  }\n\n  add(object) {\n    if (object instanceof Marble) {\n      this.marbles.push(object);\n    } else if (object instanceof Ship) {\n      this.ships.push(object);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  addMarbles() {\n    for (let i = 0; i < Game.NUM_MARBLES; i++) {\n      this.add(new Marble({ game: this }));\n    }\n  }\n\n  addShip(ctx) {\n    const ship = new Ship({\n      pos: [0,0],\n      game: this,\n      ctx: ctx\n    });\n\n    this.add(ship);\n\n    return ship;\n  }\n\n  allObjects() {\n    return [].concat(this.ships, this.marbles);\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if (obj1.isCollidedWith(obj2)) {\n          const collision = obj1.collideWith(obj2);\n          if (collision) return;\n        }\n      }\n    }\n  }\n\n  drawShapes(ctx) {\n    if(this.shapesArray.length > 0){\n      for (let i = 0; i < this.shapesArray.length; i++){\n        const currentArray = this.shapesArray[i];\n        ctx.beginPath();\n        ctx.moveTo(currentArray[0][0], currentArray[0][1]);\n        for (let j = 0; j < currentArray.length; j++){\n          ctx.lineTo(currentArray[j][0], currentArray[j][1]);\n        }\n        ctx.closePath();\n        ctx.fillStyle = \"white\";\n        ctx.fill();\n      }\n    }\n  }\n\n  dfs(root, target, seen){\n    if(root.toString() === target.toString()){\n      const foundArray = [];\n      foundArray.push(root);\n      return foundArray;\n    }\n\n    let left = [(root[0] - 10), root[1]];\n    let right = [(root[0] + 10), root[1]];\n    let up = [root[0], (root[1] - 10)];\n    let down = [root[0], (root[1] + 10)];\n    let validArrays = [];\n    if(this.filledPositions.has(left.toString()) && !seen.has(left.toString())){\n      let returnLeft = this.dfs(left, target, Object.assign(seen.add(root.toString())));\n      if(returnLeft){\n        returnLeft.unshift(root);\n        validArrays.push(returnLeft);\n      }\n    }\n    if(this.filledPositions.has(right.toString()) && !seen.has(right.toString())){\n      let returnRight = this.dfs(right, target, Object.assign(seen.add(root.toString())));\n      if(returnRight){\n        returnRight.unshift(root);\n        validArrays.push(returnRight);\n      }\n    }\n    if(this.filledPositions.has(up.toString()) && !seen.has(up.toString())){\n      let returnUp = this.dfs(up, target, Object.assign(seen.add(root.toString())));\n      if(returnUp){\n        returnUp.unshift(root);\n        validArrays.push(returnUp);\n      }\n    }\n    if(this.filledPositions.has(down.toString()) && !seen.has(down.toString())){\n      let returnDown = this.dfs(down, target, Object.assign(seen.add(root.toString())));\n      if(returnDown){\n        returnDown.unshift(root);\n        validArrays.push(returnDown);\n      }\n    }\n    let returnArray;\n    validArrays.forEach((array) => {\n      if (!returnArray){\n        returnArray = array;\n      } else {\n        if(array.length < returnArray.length){\n          returnArray = array;\n        }\n      }\n    });\n    return returnArray;\n\n  }\n\n\n  drawSeen(ctx){\n    const seen = this.seenPositions;\n    if(seen.length > 1){\n      for (let i = 0; i < seen.length - 1; i++){\n        const startX = seen[i][0];\n        const startY = seen[i][1];\n        const endX = seen[i+1][0];\n        const endY = seen[i+1][1];\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        ctx.stroke();\n      }\n        ctx.closePath();\n      if(this.filledPositions.has(seen[seen.length-1].toString())){\n\n        let shapeArray = [];\n        for (let i = 0; i < seen.length - 1; i++){\n          const cur_pos = [seen[i][0], seen[i][1]];\n          shapeArray.push(cur_pos);\n        }\n        let start = [seen[0][0], seen[0][1]];\n        let end = [seen[seen.length-1][0], seen[seen.length-1][1]];\n        let fillArray = this.dfs(end, start, new Set());\n        shapeArray = shapeArray.concat(fillArray);\n        this.shapesArray.push(shapeArray);\n        shapeArray.forEach((arr) => {\n          this.filledPositions.add(arr.toString());\n        });\n        this.seenPositions = [];\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n\n    this.drawSeen(ctx);\n    this.drawShapes(ctx);\n\n    this.allObjects().forEach((object) => {\n      object.draw(ctx);\n    });\n    const imageData = ctx.getImageData(0, 0, Game.DIM_X, Game.DIM_Y);\n    const data = imageData.data;\n    let black = 0;\n    let white = 0;\n    let count = 0;\n    for (let i = 0; i < data.length; i += 40){\n      if(data[i] === 0){\n        black++;\n      } else if (data[i] === 255){\n        white ++;\n      }\n    }\n    const percent = (white/(white+black));\n\n    if (percent > (4/5)){\n    }\n\n  }\n\n  hitWall(pos) {\n    if(pos[0] < 0 || pos[0] > Game.DIM_X){\n      return \"horizontal\";\n    } else if( pos[1] < 0 || pos[1] > Game.DIM_Y){\n      return \"vertical\";\n    }\n  }\n\n  moveObjects(delta) {\n    this.allObjects().forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  randomPosition() {\n    return [\n      Game.DIM_X * Math.random(),\n      Game.DIM_Y * Math.random()\n    ];\n  }\n\n  remove(object) {\n    if (object instanceof Marble) {\n      this.asteroids.splice(this.marble.indexOf(object), 1);\n    } else if (object instanceof Ship) {\n      this.ships.splice(this.ships.indexOf(object), 1);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)\n    ];\n  }\n}\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.FPS = 32;\nGame.NUM_MARBLES = 3;\n\nmodule.exports = Game;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/game.js","const Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\nconst Ship = require(\"./ship\");\n\nconst DEFAULTS = {\n\tCOLOR: \"#505050\",\n\tRADIUS: 15,\n\tSPEED: 4\n};\n\nclass Marble extends MovingObject {\n    constructor(options = {}) {\n      options.color = DEFAULTS.COLOR;\n      options.pos = options.pos || options.game.randomPosition();\n      options.radius = DEFAULTS.RADIUS;\n      options.vel = options.vel || Util.randomVec(DEFAULTS.SPEED);\n\t\t\tsuper(options);\n    }\n\n    collideWith(otherObject) {\n      if (otherObject instanceof Ship) {\n\t\t\t\totherObject.relocate();\n            return true;\n      }\n    }\n}\n\nmodule.exports = Marble;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/marble.js","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir (vec) {\n    const norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n    const deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  wrap (coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/util.js","const Util = require(\"./util\");\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n    this.isWrappable = true;\n    this.ctx = options.ctx;\n  }\n\n  collideWith(otherObject) {\n    // default do nothing\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  isCollidedWith(otherObject) {\n    const centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  move(timeDelta) {\n    //timeDelta is number of milliseconds since last move\n    //if the computer is busy the time delta will be larger\n    //in this case the MovingObject should move farther in this frame\n    //velocity of object is how far it should move in 1/60th of a second\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n    offsetX = this.vel[0] * velocityScale,\n    offsetY = this.vel[1] * velocityScale;\n    const prev_pos = this.pos;\n    this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n    this.game.hitWall(prev_pos, this.pos);\n\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = MovingObject;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/moving_object.js","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\n\nfunction randomColor() {\n  const hexDigits = \"0123456789ABCDEF\";\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i ++) {\n    color += hexDigits[Math.floor((Math.random() * 16))];\n  }\n\n  return color;\n}\n\nclass Ship extends MovingObject {\n  constructor(options) {\n    options.radius = Ship.RADIUS;\n    options.vel = options.vel || [0, 0];\n    options.color = options.color || randomColor();\n    super(options);\n    this.started = false;\n  }\n\n  power(impulse) {\n    if(this.pos[0] + impulse[0] < 0 || this.pos[0] + impulse[0] > this.game.x_limit || this.pos[1] + impulse[1] < 0 || this.pos[1] + impulse[1] > this.game.y_limit){\n      return;\n    }\n    const current_pos = [this.pos[0], this.pos[1]];\n    this.pos[0] += impulse[0];\n    this.pos[1] += impulse[1];\n    const next_pos = [this.pos[0], this.pos[1]];\n    if(!this.started){\n      if(this.game.filledPositions.has(current_pos.toString()) && !this.game.filledPositions.has(next_pos.toString())){\n        this.started = true;\n        this.game.seenPositions.push(current_pos);\n        this.game.seenPositions.push(next_pos);\n      }\n    } else {\n      if(this.game.filledPositions.has(next_pos.toString())){\n        this.started = false;\n      }\n      this.game.seenPositions.push(next_pos);\n    }\n  }\n\n  relocate() {\n    this.pos = [0, 0];\n    this.vel = [0, 0];\n  }\n}\n\nShip.RADIUS = 15;\nmodule.exports = Ship;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ship.js","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.ship = this.game.addShip(ctx);\n  }\n\n  bindKeyHandlers() {\n    const ship = this.ship;\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => { ship.power(move); });\n    });\n\n    key(\"space\", () => { ship.fireBullet(); });\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    //start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    //every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.MOVES = {\n  \"up\": [ 0, -10],\n  \"left\": [-10,  0],\n  \"down\": [ 0,  10],\n  \"right\": [ 10,  0],\n};\n\nmodule.exports = GameView;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/game_view.js"],"sourceRoot":""}