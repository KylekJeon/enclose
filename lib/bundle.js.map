{"version":3,"sources":["webpack:///webpack/bootstrap 29817af4751082982f96","webpack:///./lib/enclose.js","webpack:///./lib/game.js","webpack:///./lib/marble.js","webpack:///./lib/util.js","webpack:///./lib/moving_object.js","webpack:///./lib/ship.js","webpack:///./lib/astar.js","webpack:///(webpack)/buildin/module.js","webpack:///./lib/game_view.js"],"names":["Game","require","GameView","closeGameOver","$","removeClass","document","addEventListener","canvasEl","getElementsByTagName","width","DIM_X","height","DIM_Y","ctx","getContext","game","start","window","newGame","on","keyup","e","keyCode","closeInstructions","Marble","Ship","Util","Astar","Graph","astar","marbles","ships","safePositions","Set","shapesArray","linesArray","seenPositions","seenSet","x_limit","y_limit","level","lives","addMarbles","searchGrid","createSearchGrid","initializeBoard","started","nextLevel","bind","pos","arr","i","temp","j","push","left","add","toString","right","top","bottom","end","returnArr","graph","graphStart","grid","graphEnd","result","search","length","x","parseInt","y","object","NUM_MARBLES","ship","concat","allObjects","obj1","obj2","isCollidedWith","collision","collideWith","clearRect","fillStyle","BG_COLOR","fillRect","drawSeen","drawShapes","drawOutlines","forEach","draw","percent","findFilledPercent","toFixed","Math","round","updateLevel","updatePercent","imageData","getImageData","data","black","white","element","lastChild","removeChild","text","parent","getElementById","textNode","createTextNode","clear","appendChild","seen","startX","startY","endX","endY","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","has","fillBordersArray","pathFinder","updateSearchGrid","checkMarbles","addSafePoints","shapeArray","x_min","x_max","y_min","y_max","cur_pos","rayCasting","slice","set","radius","min_x","max_x","min_y","max_y","marblePos","marble","point","vs","inside","xi","yi","xj","yj","intersect","relocate","showGameOver","updateLives","addClass","currentArray","fill","roundPos","bounce","pointInCircle","delta","move","random","splice","indexOf","moveObjects","checkCollisions","wrap","FPS","module","exports","MovingObject","DEFAULTS","COLOR","RADIUS","SPEED","options","color","randomPosition","vel","randomVec","otherObject","dir","vec","norm","scale","dist","pos1","pos2","sqrt","pow","deg","PI","sin","cos","m","coord","max","isWrappable","arc","centerDist","timeDelta","loseLife","hitWall","next_vel","checkRebound","velocityScale","NORMAL_FRAME_TIME_DELTA","offsetX","offsetY","found","firstPos","set1","secondPos","set2","count","remove","randomColor","hexDigits","floor","impulse","current_pos","next_pos","newPos","definition","define","pathTo","node","curr","path","unshift","getHeap","BinaryHeap","f","cleanDirty","heuristic","heuristics","manhattan","closest","openHeap","closestNode","h","markDirty","size","currentNode","pop","closed","neighbors","il","neighbor","isWall","gScore","g","getCost","beenVisited","visited","rescoreElement","pos0","d1","abs","d2","diagonal","D","D2","min","cleanNode","gridIn","nodes","row","GridNode","init","prototype","dirtyNodes","ret","graphString","rowDebug","weight","join","fromNeighbor","scoreFunction","content","sinkDown","bubbleUp","n","parentN","elemScore","child2N","child1N","swap","child1Score","child1","child2","child2Score","addShip","Object","keys","MOVES","k","key","power","bindKeyHandlers","lastTime","requestAnimationFrame","animate","time","step"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 29817af4751082982f96","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\nfunction closeGameOver(){\n  $(\".newgame-section\").removeClass(\"show\");\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n  window.newGame = game.newGame;\n\n  $(\".newgame-section\").on(\"click\", e => {\n    closeGameOver();\n  });\n\n  $(document).keyup(function(e) {\n    if(e.keyCode === 27){\n      closeInstructions();\n    }\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/enclose.js","const Marble = require(\"./marble\");\nconst Ship = require(\"./ship\");\nconst Util = require(\"./util\");\nconst Astar = require(\"./astar\");\nconst Graph = Astar.Graph;\nconst astar = Astar.astar;\nclass Game {\n  constructor() {\n    this.marbles = [];\n    this.ships = [];\n    this.safePositions = new Set();\n    this.shapesArray = [];\n    this.linesArray = [];\n    this.seenPositions = [];\n    this.seenSet = new Set();\n    this.x_limit = Game.DIM_X;\n    this.y_limit = Game.DIM_Y;\n    this.level = 4;\n    this.lives = 1;\n    this.addMarbles(this.level);\n    this.searchGrid = this.createSearchGrid();\n    this.initializeBoard();\n    this.started = false;\n    this.nextLevel = this.nextLevel.bind(this);\n    this.newGame = this.newGame.bind(this);\n  }\n\n  nextLevel(){\n    this.ships[0].pos = [0,0];\n    this.marbles = [];\n    this.safePositions = new Set();\n    this.shapesArray = [];\n    this.linesArray = [];\n    this.seenPositions = [];\n    this.seenSet = new Set();\n    this.level += 2;\n    this.addMarbles(this.level);\n    this.searchGrid = this.createSearchGrid();\n    this.initializeBoard();\n    this.started = false;\n  }\n\n  newGame(){\n    this.ships[0].pos = [0,0];\n    this.marbles = [];\n    this.safePositions = new Set();\n    this.shapesArray = [];\n    this.linesArray = [];\n    this.seenPositions = [];\n    this.seenSet = new Set();\n    this.level = 4;\n    this.lives = 5;\n    this.addMarbles(this.level);\n    this.searchGrid = this.createSearchGrid();\n    this.initializeBoard();\n    this.started = false;\n  }\n\n  createSearchGrid() {\n    const arr = [];\n    for(let i = 0; i <= 60; i++){\n      const temp = [];\n      for(let j = 0; j <= 100; j++){\n        temp.push(0);\n      }\n      arr.push(temp);\n    }\n    return arr;\n  }\n\n  initializeBoard() {\n    for(let i = 0; i <= Game.DIM_Y; i += 10){\n      const left = [0,i];\n      this.safePositions.add(left.toString());\n      const right = [Game.DIM_X, i];\n      this.safePositions.add(right.toString());\n      this.searchGrid[i/10][0] = 1;\n      this.searchGrid[i/10][Game.DIM_X/10] = 1;\n    }\n    for(let i = 0; i <= Game.DIM_X; i += 10){\n      const top = [i,0];\n      this.safePositions.add(top.toString());\n      const bottom = [i, Game.DIM_Y];\n      this.safePositions.add(bottom.toString());\n      this.searchGrid[0][i/10] = 1;\n      this.searchGrid[Game.DIM_Y/10][i/10] = 1;\n    }\n  }\n\n  pathFinder(start, end){\n    const returnArr = [];\n    const graph = new Graph(this.searchGrid);\n    let graphStart = graph.grid[start[1]/10][start[0]/10];\n    let graphEnd = graph.grid[end[1]/10][end[0]/10];\n    const result = astar.search(graph, graphStart, graphEnd);\n    for (let i = 0; i < result.length; i++){\n      const x = parseInt(result[i].y) * 10;\n      const y = parseInt(result[i].x) * 10;\n      returnArr.push([x,y]);\n    }\n    return returnArr;\n  }\n\n\n  add(object) {\n    if (object instanceof Marble) {\n      this.marbles.push(object);\n    } else if (object instanceof Ship) {\n      this.ships.push(object);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  addMarbles(level) {\n    for (let i = 0; i < Game.NUM_MARBLES; i++) {\n      this.add(new Marble(level, { game: this }));\n    }\n  }\n\n  addShip(ctx) {\n    const ship = new Ship({\n      pos: [0,0],\n      game: this,\n      ctx: ctx\n    });\n\n    this.add(ship);\n\n    return ship;\n  }\n\n  allObjects() {\n    return [].concat(this.ships, this.marbles);\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if (obj1.isCollidedWith(obj2)) {\n          const collision = obj1.collideWith(obj2);\n          if (collision) return;\n        }\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n    ctx.fillStyle = Game.BG_COLOR;\n    ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n    this.drawSeen(ctx);\n    this.drawShapes(ctx);\n    this.drawOutlines(ctx);\n\n    this.allObjects().forEach((object) => {\n      object.draw(ctx);\n    });\n\n    if(this.seenPositions.length === 0){\n      const percent = (this.findFilledPercent(ctx) * 100).toFixed(0);\n      if(percent > 70){\n        this.nextLevel();\n        const level = Math.round(((this.level - 4) / 2) + 1);\n        this.updateLevel(level);\n      }\n      this.updatePercent(percent);\n    }\n  }\n\n  findFilledPercent(ctx){\n    const imageData = ctx.getImageData(0, 0, Game.DIM_X, Game.DIM_Y);\n    const data = imageData.data;\n    let black = 0;\n    let white = 0;\n    for (let i = 0; i < data.length; i += 40){\n      if(data[i] === 0){\n        black++;\n      } else if(data[i] === 255){\n        white ++;\n      }\n    }\n    const percent = (white/(white+black));\n    return percent;\n  }\n\n  clear (element) {\n    while (element.lastChild) {\n      element.removeChild (element.lastChild);\n    }\n  }\n\n  updatePercent(text)\n  {\n    const parent = document.getElementById(\"percent\");\n    const textNode = document.createTextNode(text);\n    this.clear(parent);\n    parent.appendChild(textNode);\n  }\n\n  updateLevel(text){\n    const parent = document.getElementById(\"level\");\n    const textNode = document.createTextNode(text);\n    this.clear(parent);\n    parent.appendChild(textNode);\n  }\n\n  updateLives(){\n    const parent = document.getElementById(\"lives\");\n    const textNode = document.createTextNode(this.lives);\n    this.clear(parent);\n    parent.appendChild(textNode);\n  }\n\n\n  drawSeen(ctx){\n    let seen = this.seenPositions;\n    if(seen.length > 1){\n      for (let i = 0; i < seen.length - 1; i++){\n        const startX = seen[i][0];\n        const startY = seen[i][1];\n        const endX = seen[i+1][0];\n        const endY = seen[i+1][1];\n        ctx.strokeStyle = \"white\";\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        ctx.stroke();\n      }\n      ctx.closePath();\n      if(this.safePositions.has(seen[seen.length-1].toString())){\n        const start = [seen[0][0], seen[0][1]];\n        const end = [seen[seen.length-1][0], seen[seen.length-1][1]];\n        const fillBordersArray = this.pathFinder(end, start);\n        seen = seen.concat(fillBordersArray);\n        seen.forEach((pos) => {\n          this.updateSearchGrid(pos);\n          this.safePositions.add(pos.toString());\n        });\n        if(this.checkMarbles(seen)){\n          this.linesArray.push(seen);\n        } else {\n          this.shapesArray.push(seen);\n          this.addSafePoints(seen);\n        }\n        this.seenPositions = [];\n        this.seenSet = new Set();\n        this.started = false;\n      }\n    }\n  }\n\n  updateSearchGrid(pos){\n    const y = pos[0]/10;\n    const x = pos[1]/10;\n    this.searchGrid[x][y] = 1;\n  }\n\n  addSafePoints(shapeArray){\n    let x_min = shapeArray[0][0];\n    let x_max = shapeArray[0][0];\n    let y_min = shapeArray[0][1];\n    let y_max = shapeArray[0][1];\n    for (let i = 0; i < shapeArray.length; i++){\n      const cur_pos = [shapeArray[i][0], shapeArray[i][1]];\n      if (cur_pos[0] < x_min){\n        x_min = cur_pos[0];\n      }\n      if (cur_pos[0] > x_max){\n        x_max = cur_pos[0];\n      }\n      if (cur_pos[1] < y_min){\n        y_min = cur_pos[1];\n      }\n      if (cur_pos[1] > y_max){\n        y_max = cur_pos[1];\n      }\n    }\n    for (let x = x_min; x <= x_max; x += 10){\n      for (let y = y_min; y <= y_max; y += 10){\n        let pos = [x, y];\n        if(this.rayCasting(pos, shapeArray.slice(1))){\n          this.safePositions.add(pos.toString());\n        }\n      }\n    }\n  }\n\n  pointInCircle(pos, set){\n    const radius = this.marbles[0].radius;\n\n    const min_x = pos[0] - radius;\n    const max_x = pos[0] + radius;\n    const min_y = pos[1] - radius;\n    const max_y = pos[1] + radius;\n\n    for (let i = min_x; i <= max_x; i++){\n      for (let j = min_y; j <= max_y; j++){\n        if(set.has([i,j].toString())){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  checkMarbles(shapeArray){\n    const marblePos = [];\n    this.marbles.forEach((marble) => {\n      marblePos.push([Math.round(marble.pos[0]), Math.round(marble.pos[1])]);\n    });\n\n    for(let i = 0; i < marblePos.length; i++){\n      if(this.rayCasting(marblePos[i], shapeArray)){\n        return true;\n      }\n    }\n  }\n\n  rayCasting(point, vs) {\n\n    let x = point[0], y = point[1];\n\n    let inside = false;\n    for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n      let xi = vs[i][0], yi = vs[i][1];\n      let xj = vs[j][0], yj = vs[j][1];\n\n      let intersect = ((yi > y) != (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n\n    return inside;\n  }\n\n  loseLife(){\n    this.ships[0].relocate([this.seenPositions[0][0], this.seenPositions[0][1]]);\n    this.seenPositions = [];\n    this.seenSet = new Set();\n    this.started = false;\n    this.lives -= 1;\n    if(this.lives <= 0){\n      this.showGameOver();\n    } else{\n      this.updateLives();\n    }\n  }\n\n  showGameOver() {\n    $(\".newgame-section\").addClass(\"show\");\n  }\n\n  drawShapes(ctx) {\n    if(this.shapesArray.length > 0){\n      for (let i = 0; i < this.shapesArray.length; i++){\n        const currentArray = this.shapesArray[i];\n        ctx.beginPath();\n        ctx.moveTo(currentArray[0][0], currentArray[0][1]);\n        for (let j = 0; j < currentArray.length; j++){\n          ctx.lineTo(currentArray[j][0], currentArray[j][1]);\n        }\n        ctx.closePath();\n        ctx.fillStyle = \"white\";\n        ctx.fill();\n      }\n    }\n  }\n\n  drawOutlines(ctx) {\n    if(this.linesArray.length > 0){\n      for (let i = 0; i < this.linesArray.length; i++){\n        const currentArray = this.linesArray[i];\n        ctx.beginPath();\n        ctx.moveTo(currentArray[0][0], currentArray[0][1]);\n        for (let j = 0; j < currentArray.length; j++){\n          ctx.lineTo(currentArray[j][0], currentArray[j][1]);\n        }\n        ctx.closePath();\n        ctx.strokeStyle = \"white\";\n        ctx.stroke();\n      }\n    }\n  }\n\n  hitWall(pos) {\n    const roundPos = [Math.round(pos[0]), Math.round(pos[1])];\n    return this.bounce(roundPos);\n  }\n\n  bounce(pos){\n    if(pos[0] <= 0 || pos[0] >= Game.DIM_X || pos[1] <= 0 || pos[1] >= Game.DIM_Y || this.pointInCircle(pos, this.safePositions)){\n      return true;\n    }\n    return false;\n  }\n\n  moveObjects(delta) {\n    this.marbles.forEach((object) => {\n      object.move(delta);\n    });\n  }\n\n  randomPosition() {\n    return [\n      Game.DIM_X * Math.random(),\n      Game.DIM_Y * Math.random()\n    ];\n  }\n\n  remove(object) {\n    if (object instanceof Marble) {\n      this.marbles.splice(this.marbles.indexOf(object), 1);\n    } else {\n      throw \"wtf?\";\n    }\n  }\n\n  step(delta) {\n    this.moveObjects(delta);\n    this.checkCollisions();\n  }\n\n  wrap(pos) {\n    return [\n      Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)\n    ];\n  }\n}\n\nGame.BG_COLOR = \"#000000\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.FPS = 32;\nGame.NUM_MARBLES = 5;\n\nmodule.exports = Game;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/game.js","const Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\nconst Ship = require(\"./ship\");\n\nconst DEFAULTS = {\n\tCOLOR: \"#505050\",\n\tRADIUS: 15,\n\tSPEED: 5\n};\n\nclass Marble extends MovingObject {\n    constructor(level, options = {}) {\n      options.color = DEFAULTS.COLOR;\n      options.pos = options.pos || options.game.randomPosition();\n      options.radius = DEFAULTS.RADIUS;\n      options.vel = Util.randomVec(level);\n\t\t\tsuper(options);\n    }\n\n    collideWith(otherObject) {\n      if (otherObject instanceof Ship) {\n\t\t\t\tif(this.game.safePositions.has(otherObject.pos.toString())){\n\t\t\t\t\treturn false;\n\t\t\t\t} else{\n\n\t\t\t\t}\n      return true;\n      }\n    }\n}\n\nmodule.exports = Marble;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/marble.js","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir (vec) {\n    const norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n  // Find distance between two points.\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n    const deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  wrap (coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/util.js","const Util = require(\"./util\");\n\nclass MovingObject {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.game = options.game;\n    this.isWrappable = true;\n    this.ctx = options.ctx;\n  }\n\n  collideWith(otherObject) {\n    // default do nothing\n  }\n\n  draw(ctx) {\n    if(this === this.game.ships[0]){\n      if(this.game.safePositions.has(this.pos.toString())){\n        this.color = \"green\";\n      } else {\n        this.color = \"red\";\n      }\n    }\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  isCollidedWith(otherObject) {\n    const centerDist = Util.dist(this.pos, otherObject.pos);\n    return centerDist < (this.radius + otherObject.radius);\n  }\n\n  move(timeDelta) {\n    //timeDelta is number of milliseconds since last move\n    //if the computer is busy the time delta will be larger\n    //in this case the MovingObject should move farther in this frame\n    //velocity of object is how far it should move in 1/60th of a second\n    const cur_pos = [Math.round(this.pos[0]), Math.round(this.pos[1])];\n\n    if(this.game.pointInCircle(cur_pos, this.game.seenSet)){\n      this.game.loseLife();\n    }\n\n    if(this.game.hitWall(cur_pos)){\n      const next_vel = this.checkRebound(cur_pos, this.vel);\n      if(next_vel === \"x\"){\n        this.vel[0] = -this.vel[0];\n      } else if(next_vel === \"y\"){\n        this.vel[1] = -this.vel[1];\n      } else {\n        this.vel[0] = -this.vel[0];\n        this.vel[1] = -this.vel[1];\n      }\n    }\n\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA;\n    let offsetX = this.vel[0] * velocityScale;\n    let offsetY = this.vel[1] * velocityScale;\n    this.pos = [(this.pos[0] + offsetX), (this.pos[1] + offsetY)];\n  }\n\n  checkRebound(pos, vel){\n    let x;\n    let y;\n    let found = false;\n    if (vel[0] < 0){\n      x = -1;\n    } else {\n      x = 1;\n    }\n    if (vel[1] < 0){\n      y = -1;\n    } else {\n      y = 1;\n    }\n\n    let firstPos = pos.slice();\n    const set1 = [-x, y];\n\n    let secondPos = pos.slice();\n    const set2 = [x, -y];\n    let count = 0;\n    while(!found && count < 40){\n      firstPos = [(firstPos[0] + set1[0]), (firstPos[1] + set1[1])];\n      secondPos = [(secondPos[0] + set2[0]), (secondPos[1] + set2[1])];\n      if(!this.game.hitWall(firstPos)){\n        found = \"firstPos\";\n      }\n      if(!this.game.hitWall(secondPos)){\n        found = \"secondPos\";\n      }\n      count++;\n    }\n\n    if(found === \"firstPos\"){\n      return \"x\";\n    } else if(found === \"secondPos\"){\n      return \"y\";\n    } else {\n      return \"z\";\n    }\n  }\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = MovingObject;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/moving_object.js","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\n\nfunction randomColor() {\n  const hexDigits = \"0123456789ABCDEF\";\n\n  let color = \"#\";\n  for (let i = 0; i < 3; i ++) {\n    color += hexDigits[Math.floor((Math.random() * 16))];\n  }\n\n  return color;\n}\n\nclass Ship extends MovingObject {\n  constructor(options) {\n    options.radius = Ship.RADIUS;\n    options.vel = options.vel || [0, 0];\n    options.color = \"green\";\n    super(options);\n  }\n\n  power(impulse) {\n    if(this.pos[0] + (impulse[0]) < 0 || this.pos[0] + (impulse[0]) > this.game.x_limit || this.pos[1] + (impulse[1]) < 0 || this.pos[1] + (impulse[1]) > this.game.y_limit){\n      return;\n    }\n    const current_pos = [this.pos[0], this.pos[1]];\n    this.pos[0] += impulse[0];\n    this.pos[1] += impulse[1];\n    const next_pos = [this.pos[0], this.pos[1]];\n    if(!this.game.started){\n      if(this.game.safePositions.has(current_pos.toString()) && !this.game.safePositions.has(next_pos.toString())){\n        this.game.started = true;\n        this.game.seenPositions.push(current_pos);\n        this.game.seenPositions.push(next_pos);\n        this.game.seenSet.add(current_pos.toString());\n        this.game.seenSet.add(next_pos.toString());\n      }\n    } else {\n      if(this.game.safePositions.has(next_pos.toString())){\n        this.game.started = false;\n      }\n      this.game.seenPositions.push(next_pos);\n      this.game.seenSet.add(next_pos.toString());\n    }\n  }\n\n  relocate(newPos) {\n    this.pos = [newPos[0], newPos[1]];\n  }\n}\n\nShip.RADIUS = 10;\nmodule.exports = Ship;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/ship.js","// javascript-astar 0.4.1\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a Binary Heap.\n// Includes Binary Heap (with modifications) from Marijn Haverbeke.\n// http://eloquentjavascript.net/appendix2.html\n(function(definition) {\n  /* global module, define */\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = definition();\n  } else if (typeof define === 'function' && define.amd) {\n    define([], definition);\n  } else {\n    var exports = definition();\n    window.astar = exports.astar;\n    window.Graph = exports.Graph;\n  }\n})(function() {\n\nfunction pathTo(node) {\n  var curr = node;\n  var path = [];\n  while (curr.parent) {\n    path.unshift(curr);\n    curr = curr.parent;\n  }\n  return path;\n}\n\nfunction getHeap() {\n  return new BinaryHeap(function(node) {\n    return node.f;\n  });\n}\n\nvar astar = {\n  /**\n  * Perform an A* Search on a graph given a start and end node.\n  * @param {Graph} graph\n  * @param {GridNode} start\n  * @param {GridNode} end\n  * @param {Object} [options]\n  * @param {bool} [options.closest] Specifies whether to return the\n             path to the closest node if the target is unreachable.\n  * @param {Function} [options.heuristic] Heuristic function (see\n  *          astar.heuristics).\n  */\n  search: function(graph, start, end, options) {\n    graph.cleanDirty();\n    options = options || {};\n    var heuristic = options.heuristic || astar.heuristics.manhattan;\n    var closest = options.closest || false;\n\n    var openHeap = getHeap();\n    var closestNode = start; // set the start node to be the closest if required\n\n    start.h = heuristic(start, end);\n    graph.markDirty(start);\n\n    openHeap.push(start);\n\n    while (openHeap.size() > 0) {\n\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      var currentNode = openHeap.pop();\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        return pathTo(currentNode);\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbors.\n      currentNode.closed = true;\n\n      // Find all neighbors for the current node.\n      var neighbors = graph.neighbors(currentNode);\n\n      for (var i = 0, il = neighbors.length; i < il; ++i) {\n        var neighbor = neighbors[i];\n\n        if (neighbor.closed || neighbor.isWall()) {\n          // Not a valid node to process, skip to next neighbor.\n          continue;\n        }\n\n        // The g score is the shortest distance from start to current node.\n        // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n        var gScore = currentNode.g + neighbor.getCost(currentNode);\n        var beenVisited = neighbor.visited;\n\n        if (!beenVisited || gScore < neighbor.g) {\n\n          // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n          neighbor.visited = true;\n          neighbor.parent = currentNode;\n          neighbor.h = neighbor.h || heuristic(neighbor, end);\n          neighbor.g = gScore;\n          neighbor.f = neighbor.g + neighbor.h;\n          graph.markDirty(neighbor);\n          if (closest) {\n            // If the neighbour is closer than the current closestNode or if it's equally close but has\n            // a cheaper path than the current closest node then it becomes the closest node\n            if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n              closestNode = neighbor;\n            }\n          }\n\n          if (!beenVisited) {\n            // Pushing to heap will put it in proper place based on the 'f' value.\n            openHeap.push(neighbor);\n          } else {\n            // Already seen the node, but since it has been rescored we need to reorder it in the heap\n            openHeap.rescoreElement(neighbor);\n          }\n        }\n      }\n    }\n\n    if (closest) {\n      return pathTo(closestNode);\n    }\n\n    // No result was found - empty array signifies failure to find path.\n    return [];\n  },\n  // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n  heuristics: {\n    manhattan: function(pos0, pos1) {\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return d1 + d2;\n    },\n    diagonal: function(pos0, pos1) {\n      var D = 1;\n      var D2 = Math.sqrt(2);\n      var d1 = Math.abs(pos1.x - pos0.x);\n      var d2 = Math.abs(pos1.y - pos0.y);\n      return (D * (d1 + d2)) + ((D2 - (2 * D)) * Math.min(d1, d2));\n    }\n  },\n  cleanNode: function(node) {\n    node.f = 0;\n    node.g = 0;\n    node.h = 0;\n    node.visited = false;\n    node.closed = false;\n    node.parent = null;\n  }\n};\n\n/**\n * A graph memory structure\n * @param {Array} gridIn 2D array of input weights\n * @param {Object} [options]\n * @param {bool} [options.diagonal] Specifies whether diagonal moves are allowed\n */\nfunction Graph(gridIn, options) {\n  options = options || {};\n  this.nodes = [];\n  this.diagonal = !!options.diagonal;\n  this.grid = [];\n  for (var x = 0; x < gridIn.length; x++) {\n    this.grid[x] = [];\n\n    for (var y = 0, row = gridIn[x]; y < row.length; y++) {\n      var node = new GridNode(x, y, row[y]);\n      this.grid[x][y] = node;\n      this.nodes.push(node);\n    }\n  }\n  this.init();\n}\n\nGraph.prototype.init = function() {\n  this.dirtyNodes = [];\n  for (var i = 0; i < this.nodes.length; i++) {\n    astar.cleanNode(this.nodes[i]);\n  }\n};\n\nGraph.prototype.cleanDirty = function() {\n  for (var i = 0; i < this.dirtyNodes.length; i++) {\n    astar.cleanNode(this.dirtyNodes[i]);\n  }\n  this.dirtyNodes = [];\n};\n\nGraph.prototype.markDirty = function(node) {\n  this.dirtyNodes.push(node);\n};\n\nGraph.prototype.neighbors = function(node) {\n  var ret = [];\n  var x = node.x;\n  var y = node.y;\n  var grid = this.grid;\n\n  // West\n  if (grid[x - 1] && grid[x - 1][y]) {\n    ret.push(grid[x - 1][y]);\n  }\n\n  // East\n  if (grid[x + 1] && grid[x + 1][y]) {\n    ret.push(grid[x + 1][y]);\n  }\n\n  // South\n  if (grid[x] && grid[x][y - 1]) {\n    ret.push(grid[x][y - 1]);\n  }\n\n  // North\n  if (grid[x] && grid[x][y + 1]) {\n    ret.push(grid[x][y + 1]);\n  }\n\n  if (this.diagonal) {\n    // Southwest\n    if (grid[x - 1] && grid[x - 1][y - 1]) {\n      ret.push(grid[x - 1][y - 1]);\n    }\n\n    // Southeast\n    if (grid[x + 1] && grid[x + 1][y - 1]) {\n      ret.push(grid[x + 1][y - 1]);\n    }\n\n    // Northwest\n    if (grid[x - 1] && grid[x - 1][y + 1]) {\n      ret.push(grid[x - 1][y + 1]);\n    }\n\n    // Northeast\n    if (grid[x + 1] && grid[x + 1][y + 1]) {\n      ret.push(grid[x + 1][y + 1]);\n    }\n  }\n\n  return ret;\n};\n\nGraph.prototype.toString = function() {\n  var graphString = [];\n  var nodes = this.grid;\n  for (var x = 0; x < nodes.length; x++) {\n    var rowDebug = [];\n    var row = nodes[x];\n    for (var y = 0; y < row.length; y++) {\n      rowDebug.push(row[y].weight);\n    }\n    graphString.push(rowDebug.join(\" \"));\n  }\n  return graphString.join(\"\\n\");\n};\n\nfunction GridNode(x, y, weight) {\n  this.x = x;\n  this.y = y;\n  this.weight = weight;\n}\n\nGridNode.prototype.toString = function() {\n  return \"[\" + this.x + \" \" + this.y + \"]\";\n};\n\nGridNode.prototype.getCost = function(fromNeighbor) {\n  // Take diagonal weight into consideration.\n  if (fromNeighbor && fromNeighbor.x != this.x && fromNeighbor.y != this.y) {\n    return this.weight * 1.41421;\n  }\n  return this.weight;\n};\n\nGridNode.prototype.isWall = function() {\n  return this.weight === 0;\n};\n\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\n\nBinaryHeap.prototype = {\n  push: function(element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n\n    // Allow it to sink down.\n    this.sinkDown(this.content.length - 1);\n  },\n  pop: function() {\n    // Store the first element so we can return it later.\n    var result = this.content[0];\n    // Get the element at the end of the array.\n    var end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it bubble up.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  },\n  remove: function(node) {\n    var i = this.content.indexOf(node);\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    var end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  },\n  size: function() {\n    return this.content.length;\n  },\n  rescoreElement: function(node) {\n    this.sinkDown(this.content.indexOf(node));\n  },\n  sinkDown: function(n) {\n    // Fetch the element that has to be sunk.\n    var element = this.content[n];\n\n    // When at 0, an element can not sink any further.\n    while (n > 0) {\n\n      // Compute the parent element's index, and fetch it.\n      var parentN = ((n + 1) >> 1) - 1;\n      var parent = this.content[parentN];\n      // Swap the elements if the parent is greater.\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        // Update 'n' to continue at the new position.\n        n = parentN;\n      }\n      // Found a parent that is less, no need to sink any further.\n      else {\n        break;\n      }\n    }\n  },\n  bubbleUp: function(n) {\n    // Look up the target element and its score.\n    var length = this.content.length;\n    var element = this.content[n];\n    var elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) << 1;\n      var child1N = child2N - 1;\n      // This is used to store the new position of the element, if any.\n      var swap = null;\n      var child1Score;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        var child2 = this.content[child2N];\n        var child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      }\n      // Otherwise, we are done.\n      else {\n        break;\n      }\n    }\n  }\n};\n\nreturn {\n  astar: astar,\n  Graph: Graph\n};\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/astar.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 7\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.ship = this.game.addShip(ctx);\n  }\n\n  bindKeyHandlers() {\n    const ship = this.ship;\n\n    Object.keys(GameView.MOVES).forEach((k) => {\n      let move = GameView.MOVES[k];\n      key(k, () => { ship.power(move); });\n    });\n  }\n\n  start() {\n    this.bindKeyHandlers();\n    this.lastTime = 0;\n    //start the animation\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx);\n    this.lastTime = time;\n\n    //every call to animate requests causes another call to animate\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nGameView.MOVES = {\n  \"up\": [ 0, -10],\n  \"left\": [-10,  0],\n  \"down\": [ 0,  10],\n  \"right\": [ 10,  0],\n};\n\nmodule.exports = GameView;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/game_view.js"],"sourceRoot":""}